plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'me.cwpark'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.flywaydb:flyway-core"
	implementation "io.jsonwebtoken:jjwt:0.9.1"
	implementation "org.springframework.boot:spring-boot-starter-security"

	compileOnly "org.projectlombok:lombok"

	runtimeOnly "com.h2database:h2"

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	annotationProcessor "org.projectlombok:lombok"

	asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.5.RELEASE"
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.restdocs:spring-restdocs-restassured:2.0.5.RELEASE"
	testImplementation "io.rest-assured:rest-assured:3.3.0"

}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

ext {
	snippetsDir = file('build/generated-snippets')
}

task testDocument(type: Test) {
	useJUnitPlatform()
	filter {
		includeTestsMatching "*.documentation.*"
	}
}

asciidoctor {
	dependsOn test
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor

	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}
